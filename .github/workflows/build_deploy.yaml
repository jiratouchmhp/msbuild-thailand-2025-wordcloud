name: Build and deploy Docker app to Azure

on: 
  push:
    branches:
      - main
  workflow_dispatch:
permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

# CONFIGURATION
# For help, go to https://github.com/Azure/Actions
#
# Set up the following secrets in your repository:
#   AZURE_CREDENTIALS, REGISTRY_USERNAME, REGISTRY_PASSWORD, REGISTRY_URL
# 2. Change these variables for your configuration:
env:
  CONTAINER_REGISTRY: ${{ secrets.REGISTRY_URL }}.azurecr.io  # set secret with Container Registry URL, example : xyz.azurecr.io
  CONTAINER_IMAGE_NAME: msbuild-thailand-2025-wordcloud  # set this to your container image name, example: nodejsapp
# AZURE_RESOURCE_GROUP: ActionsDemo   # set this to your Azure Resource group's name - Needed only if you are provisioning the app in the workflow
# AZURE_APP_PLAN: ActionPlan  # set this to your App service plan's name - Needed only if you are provisioning the app in the workflow
  
jobs:
  run-unit-tests:
    runs-on: ubuntu-latest
    environment: DEV
    steps:
    - uses: actions/checkout@v4
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
    - name: Install dependencies
      run: npm install
    - name: Setup subproject
      run: npm run setup
    - name: Run unit tests
      run: npm test
    - name: Test Report
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: ${{ !cancelled() }}       # run this step even if previous step failed
      with:
        files: |
          Server/jest-*.xml

  build-and-deploy:
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    environment: DEV
    needs: run-unit-tests
    steps:
    - uses: actions/checkout@v4
    - name: Azure CLI Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: ACR authentication
      uses: azure/docker-login@v2
      with:
        login-server: ${{ env.CONTAINER_REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        
    - name: Docker Build & Push to ACR
      run: |
        npm install
        npm run setup
        npm run build
        ls Server/public
        cd Server
        docker build . -t ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_IMAGE_NAME }}:${{ github.sha }}

    - name: Set Web App ACR authentication
      uses: Azure/appservice-settings@v1
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }} 
        app-settings-json: |
          [
              {
                  "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                  "value": "${{ secrets.REGISTRY_PASSWORD }}",
                  "slotSetting": false
              },
              {
                  "name": "DOCKER_REGISTRY_SERVER_URL",
                  "value": "https://${{ env.CONTAINER_REGISTRY }}",
                  "slotSetting": false
              },
              {
                  "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                  "value": "${{ secrets.REGISTRY_USERNAME  }}",
                  "slotSetting": false
              },
              {
                  "name": "BACKEND_URL",
                  "value": "${{ secrets.AZURE_WEBAPP_URL }}",
                  "slotSetting": false
              },
              {
                  "name": "FRONTEND_URL",
                  "value": "${{ secrets.AZURE_WEBAPP_URL }}",
                  "slotSetting": false
              }
          ]

    - name: 'Deploy to Azure Web App for Container'
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }} 
        images: ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_IMAGE_NAME }}:${{ github.sha }}